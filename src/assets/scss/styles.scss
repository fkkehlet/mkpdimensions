/*----------------------------------------------------------------------------*\
  ----------------------------------------------------------------------------
   #OVERVIEW
  ----------------------------------------------------------------------------
\*----------------------------------------------------------------------------*/
/* For documentation on the CSS methodology used, see https://cube.fyi/ */


/**
 * 
 * ORDER OF PROPERTIES REFERENCE
 * 
 * 1. display (e.g., flex, grid, hidden, etc.)
 * 2. positioning (e.g., position, left/right, z-index, etc.)
 * 3. box model (e.g., height, background, etc.)
 * 4. typography
 * 5. effects (e.g., transform, filter, opacity)
 * 6. other
 * 
 */





/*----------------------------------------------------------------------------*\
  ----------------------------------------------------------------------------
   # GLOBAL
  ----------------------------------------------------------------------------
\*----------------------------------------------------------------------------*/


@use 'global/fonts';
@use 'global/reset';
@use 'global/root';
@use 'global/elements';





/*----------------------------------------------------------------------------*\
  ----------------------------------------------------------------------------
   #COMPOSITION
  ----------------------------------------------------------------------------
\*----------------------------------------------------------------------------*/
/**
 * 
 * THE COMPOSITION LAYER SHOULD
 *   - Provide high-level, flexible layouts
 *   - Determine how elements interact with each other
 *   - Create consistent flow and rhythm
 * 
 * 
 * THE COMPOSITION LAYER SHOULD NOT
 *   - Provide visual treatment such as colour or font style
 *   - Provide decorative styles such as shadows and patterns
 *   - Force a browser to generate a pixel-perfect layout instead of a flexible,
 *     progressive layout
 * 
 */


@use 'composition/box';
@use 'composition/breakout';
@use 'composition/cluster';
@use 'composition/cover';
@use 'composition/flow';
@use 'composition/frame';
@use 'composition/grid';
@use 'composition/icon';
@use 'composition/reel';
@use 'composition/sidebar';
@use 'composition/squeeze';
@use 'composition/stack';
@use 'composition/switcher';






/*----------------------------------------------------------------------------*\
  ----------------------------------------------------------------------------
   #UTILITY
  ----------------------------------------------------------------------------
\*----------------------------------------------------------------------------*/
/**
 * 
 * THE UTILITY LAYER SHOULD
 *   - Apply a single CSS property or a concise group of related properties
 *   - Extend design tokens to maintain a single source of truth
 *   - Abstract repeatability away from the CSS and apply it to the HTML instead
 * 
 * 
 * THE UTILITY LAYER SHOULD NOT
 *   - Define a large group of unrelated CSS properties
 *   - Be used as a specificity hack
 * 
 */


/* Display */
@use 'utility/display';
@use 'utility/alignment';
@use 'utility/gap';

/* Box model */
@use 'utility/background';
@use 'utility/padding';
@use 'utility/border';
@use 'utility/margin';

/* Typography */
@use 'utility/typography';

/* Effects */
@use 'utility/shadow';





/*----------------------------------------------------------------------------*\
  ----------------------------------------------------------------------------
   #BLOCK
  ----------------------------------------------------------------------------
\*----------------------------------------------------------------------------*/
/**
 * 
 * THE BLOCK LAYER SHOULD
 *   - Extend the work already done by the global CSS, composition and utility
 *     layers
 *   - Apply a collection of design tokens within a concise group
 *   - Create a namespace or specificity boost
 * 
 * 
 * THE BLOCK LAYER SHOULD NOT
 *   - Grow to anything larger than a handful of CSS rules (max 80-100 lines)
 *   - Solve more than one contextual problem
 * 
 */

